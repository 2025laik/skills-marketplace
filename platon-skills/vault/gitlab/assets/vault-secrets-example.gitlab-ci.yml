# Complete example of using Vault secrets in GitLab CI/CD

include:
  - component: $CI_SERVER_FQDN/platon/ci-components/docker/docker@2
  - component: $CI_SERVER_FQDN/platon/ci-components/deploy/deploy@1

variables:
  KUBE_PROD_DOMAIN: myapp.sikt.no
  KUBE_TEST_ID: myapp
  HTTP_PORT: '8080'
  REPLICAS: '1'

# Reusable configuration for Vault secrets
.vault-secrets:
  id_tokens:
    VAULT_ID_TOKEN:
      aud: "https://vault.sikt.no:8200"
  secrets:
    # Database credentials
    DB_PASSWORD:
      token: $VAULT_ID_TOKEN
      vault: "gitlab/my-group/my-project/database/password@secret"
      file: false

    DB_USERNAME:
      token: $VAULT_ID_TOKEN
      vault: "gitlab/my-group/my-project/database/username@secret"
      file: false

    DB_HOST:
      token: $VAULT_ID_TOKEN
      vault: "gitlab/my-group/my-project/database/host@secret"
      file: false

    # API keys
    EXTERNAL_API_KEY:
      token: $VAULT_ID_TOKEN
      vault: "gitlab/my-group/my-project/external-api/key@secret"
      file: false

    # Configuration file example (stored as file)
    APP_CONFIG:
      token: $VAULT_ID_TOKEN
      vault: "gitlab/my-group/my-project/config/application@secret"
      file: true

stages:
  - build
  - deploy

build:
  extends: .platon-docker-build
  stage: build

# Production deployment with secrets
production:
  extends:
    - .production
    - .vault-secrets  # Include vault secrets
  stage: deploy
  variables:
    REPLICAS: "2"
  script:
    # Deploy secret first
    - deploy secret.yaml
    # Then deploy application
    - deploy deployment.yaml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Staging deployment with secrets
staging:
  extends:
    - .staging
    - .vault-secrets  # Include vault secrets
  stage: deploy
  script:
    - deploy secret.yaml
    - deploy deployment.yaml
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Review deployment with secrets
review:
  extends:
    - .review
    - .vault-secrets  # Include vault secrets
  stage: deploy
  script:
    - deploy secret.yaml
    - deploy deployment.yaml
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
